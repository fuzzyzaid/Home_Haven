// <auto-generated />
using System;
using Home_Haven.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Home_Haven.Migrations
{
    [DbContext(typeof(Home_Haven_DBContext))]
    partial class Home_Haven_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Home_Haven.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"), 1L, 1);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            OrderDate = new DateTime(2024, 4, 14, 17, 54, 38, 161, DateTimeKind.Local).AddTicks(1632),
                            UserID = 1
                        },
                        new
                        {
                            OrderID = 2,
                            OrderDate = new DateTime(2024, 4, 14, 17, 54, 38, 161, DateTimeKind.Local).AddTicks(1672),
                            UserID = 2
                        });
                });

            modelBuilder.Entity("Home_Haven.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            ProductID = 1,
                            Quantity = 2,
                            TotalPrice = 241.98m
                        },
                        new
                        {
                            OrderID = 1,
                            ProductID = 2,
                            Quantity = 1,
                            TotalPrice = 350.50m
                        },
                        new
                        {
                            OrderID = 2,
                            ProductID = 2,
                            Quantity = 3,
                            TotalPrice = 1051.50m
                        });
                });

            modelBuilder.Entity("Home_Haven.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Description = "A beautiful vintage chair made of oak.",
                            ImageURL = "/images/vintage_chair.jpg",
                            Name = "Vintage Chair",
                            Price = 120.99m,
                            Quantity = 10
                        },
                        new
                        {
                            ProductID = 2,
                            Description = "A sleek modern table made of glass and steel.",
                            ImageURL = "/images/modern_table.jpg",
                            Name = "Modern Table",
                            Price = 350.50m,
                            Quantity = 5
                        },
                        new
                        {
                            ProductID = 3,
                            Description = "A classic wooden bed with elegant carvings.",
                            ImageURL = "/images/bed1.jpg",
                            Name = "Classic Bed",
                            Price = 499.99m,
                            Quantity = 7
                        },
                        new
                        {
                            ProductID = 4,
                            Description = "A comfortable contemporary sofa with plush cushions.",
                            ImageURL = "/images/easysofa2.jpg",
                            Name = "Contemporary Sofa",
                            Price = 899.99m,
                            Quantity = 3
                        },
                        new
                        {
                            ProductID = 5,
                            Description = "A rustic table made from reclaimed wood.",
                            ImageURL = "/images/table2.jpg",
                            Name = "Rustic Table",
                            Price = 249.99m,
                            Quantity = 4
                        },
                        new
                        {
                            ProductID = 6,
                            Description = "A stylish leather chair with a modern design.",
                            ImageURL = "/images/chair2.jpg",
                            Name = "Leather Chair",
                            Price = 199.99m,
                            Quantity = 8
                        },
                        new
                        {
                            ProductID = 7,
                            Description = "An elegant bed with a plush headboard.",
                            ImageURL = "/images/bed4.jpg",
                            Name = "Elegant Bed",
                            Price = 699.99m,
                            Quantity = 5
                        },
                        new
                        {
                            ProductID = 8,
                            Description = "A minimalist sofa with clean lines and a modern look.",
                            ImageURL = "/images/easysofa3.jpg",
                            Name = "Minimalist Sofa",
                            Price = 799.99m,
                            Quantity = 4
                        },
                        new
                        {
                            ProductID = 9,
                            Description = "An industrial-style table with metal and wood elements.",
                            ImageURL = "/images/table3.jpg",
                            Name = "Industrial Table",
                            Price = 299.99m,
                            Quantity = 6
                        },
                        new
                        {
                            ProductID = 10,
                            Description = "A comfy chair with soft upholstery and a cozy design.",
                            ImageURL = "/images/comchair2.jpg",
                            Name = "Comfy Chair",
                            Price = 149.99m,
                            Quantity = 12
                        },
                        new
                        {
                            ProductID = 11,
                            Description = "A modern bed with a sleek design and a low profile.",
                            ImageURL = "/images/bed3.jpg",
                            Name = "Modern Bed",
                            Price = 549.99m,
                            Quantity = 5
                        },
                        new
                        {
                            ProductID = 12,
                            Description = "A reclining sofa with luxurious padding for maximum comfort.",
                            ImageURL = "/images/sofa4.jpg",
                            Name = "Reclining Sofa",
                            Price = 1099.99m,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("Home_Haven.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Address = "123 Main St",
                            Email = "zaid@example.com",
                            Name = "Zaid Alam",
                            Password = "Zaid1234",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            UserID = 2,
                            Address = "456 Elm St",
                            Email = "aniketh@example.com",
                            Name = "Kazi Aniketh",
                            Password = "Aniketh1234",
                            PhoneNumber = "0987654321"
                        });
                });

            modelBuilder.Entity("Home_Haven.Models.Order", b =>
                {
                    b.HasOne("Home_Haven.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Home_Haven.Models.OrderDetail", b =>
                {
                    b.HasOne("Home_Haven.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Home_Haven.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Home_Haven.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Home_Haven.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Home_Haven.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
